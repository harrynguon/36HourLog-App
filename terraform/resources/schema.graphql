# Use subscriptions for large objects, small changes or extremely low latency apps
schema {
  query: Query
  mutation: Mutation
}

type Query {
  getItem(item: ItemInput!): Item
  listItems(filter: TableItemFilterInput!): ItemList
}

type Mutation {
  createItem(item: ItemInput!): Item
  updateItem(item: ItemInput!): Item
  deleteItem(item: ItemInput!): Item
}

type Item {
  DeviceID: String!
  ExpiryDate: String!
  Description: String!
}

type ItemList {
  Items: [Item]!
}

input ItemInput {
  DeviceID: String
  ExpiryDate: String
  Description: String
}

input TableItemFilterInput {
  DeviceID: String!
  Operator: FilterOperator!
}

enum FilterOperator {
  EQ
  NE
}